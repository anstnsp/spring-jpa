plugins {
	id 'org.springframework.boot' version '2.2.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "com.moowork.node" version "1.3.1"
}

apply plugin: "com.moowork.node"
apply plugin: "application"
mainClassName = "com.audgml.demo.DemoApplication"

group = 'com.audgml'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.batch:spring-batch-test'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation "com.moowork.gradle:gradle-node-plugin") 
}

test {
	useJUnitPlatform()
}

def frontendDir = "$projectDir/frontend"
//node 버전 및 npm, node 설치파일 저장 디렉토리 명시 
// node {
// 	version = "12.15.0"
// 	download=true 
// 	workDir = file("${project.buildDir}?nodejs")
// 	npmWorkDir = file("${project.buildDir}/npm")
// }

task appNpmInstall(type: NpmTask) {
	workingDir = file("${frontendDir}")
	args = ["run", "prod"]
}



